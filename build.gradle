usePlugin 'jetty'
usePlugin 'eclipse'

sourceTarget = 1.6
version = '1.0'

gradle.taskGraph.whenReady {graph -> 
  if (graph.hasTask(':jettyRun') || graph.hasTask(':jettyRunWar'))  {
    dependencies.add('runtime', 'org.jboss.weld.servlet:weld-servlet:1.0.0-CR2')
    dependencies.add('runtime', 'javax.transaction:jta:1.0.1B')
  }

  if (graph.hasTask(':ee6War')) {
    // TODO: Really all that needs to happen here is playing around with the configurations and dependencies
  }

  if (graph.hasTask(':tomcatWar')) {
    dependencies.add('runtime', 'org.jboss.weld.servlet:weld-servlet:1.0.0-CR2')
    dependencies.add('runtime', 'javax.servlet:jstl:1.2')
    dependencies.add('runtime', 'javax.transaction:jta:1.0.1B')

    tasks.getByName('war').configure { 
      fileSet(dir: file('src/main/webapp-tomcat'))
      webXml = file('src/main/webapp-tomcat/WEB-INF/web.xml')
    }
  }
}

repositories {
  mavenCentral()
  mavenRepo urls: 'http://repository.jboss.org/maven2'
  mavenRepo urls: 'http://download.java.net/maven/2'
}

configurations {
  runtime.exclude group: 'javax.el'
}

dependencies {
  compile 'javax.faces:jsf-api:2.0.1-FCS'
  compile 'javax.enterprise:cdi-api:1.0'
  compile 'javax.inject:javax.inject:1'

  providedCompile 'javax.annotation:jsr250-api:1.0'
  providedCompile 'javax.validation:validation-api:1.0.0.GA'

  providedRuntime 'jboss.jbossts:jbossjta:4.4.0.GA'
  providedRuntime 'jboss.jbossts:jbossts-common:4.4.0.GA'

  runtime 'org.glassfish.web:el-impl:2.2'
  runtime 'javax.faces:jsf-impl:2.0.1-FCS' 
  runtime 'javax.transaction:jta:1.0.1B'

  // Something is really messed up here because I have to specify the deps
  runtime module('org.jboss.weld:weld-core:1.0.0') {
    dependencies 'org.jboss.weld:weld-api:1.0', 'org.jboss.weld:weld-spi:1.0'
  }

  runtime 'org.hibernate:hibernate-validator:4.0.2.GA' 

  // Weld is apparently using these
  runtime 'org.slf4j:slf4j-log4j12:1.5.9.RC1'
  runtime 'org.slf4j:slf4j-ext:1.5.9.RC1'
}

[jettyRun,jettyRunWar]*.httpPort = 9090
[jettyRun,jettyRunWar]*.stopPort = 9091
[jettyRun,jettyRunWar]*.overrideWebXml = file('src/main/webapp-jetty/WEB-INF/override-web.xml')
[jettyRun,jettyRunWar]*.jettyEnvXmlFile = file('src/main/webapp-jetty/WEB-INF/jetty-env.xml')

// Add the classes to the classpath so it'll run in Jetty
[jettyRun,jettyRunWar]*.doFirst {
  configurations.providedRuntime.files.each { org.mortbay.jetty.Server.class.classLoader.addURL(it.toURI().toURL()) } 
}

task tomcatWar(dependsOn: war)
task ee6War(dependsOn: war)

task explode(dependsOn: war) << {
  ant.unzip(src: war.archivePath, dest: "$buildDir/exploded") 
}

task deploy(dependsOn: war) << {
  copy {
    from war.archivePath
    into "$deployPath"
  }
}

task deployExploded(dependsOn: explode) << {
  copy {
    from "$buildDir/exploded"
    into "$deployPath/$war.archiveName"
  }
}

